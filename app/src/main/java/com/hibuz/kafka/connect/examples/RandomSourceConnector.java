/*
 * This source file was generated by the Gradle 'init' task
 */
package com.hibuz.kafka.connect.examples;

import java.util.List;
import java.util.Map;

import org.apache.kafka.common.config.ConfigDef;
import org.apache.kafka.connect.connector.Task;
import org.apache.kafka.connect.source.SourceConnector;

import com.hibuz.kafka.connect.examples.config.RandomConnectorConfig;

public class RandomSourceConnector extends SourceConnector {

    private RandomConnectorConfig randomConnectorConfig;

    @Override
    public void start(Map<String, String> props) {
        randomConnectorConfig = new RandomConnectorConfig(props);
    }

    @Override
    public String version() {
        return RandomConnectorConfig.CONNECTOR_VERSION;
    }

    @Override
    public Class<? extends Task> taskClass() {
        return RandomSourceTask.class;
    }

    @Override
    public List<Map<String, String>> taskConfigs(int maxTasks) {
        return List.of(Map.of(RandomConnectorConfig.SLEEP_CONFIG,
         Integer.toString(randomConnectorConfig.getInt(RandomConnectorConfig.SLEEP_CONFIG)),
         RandomConnectorConfig.TOPIC_CONFIG, randomConnectorConfig.getString(RandomConnectorConfig.TOPIC_CONFIG)));
    }

    @Override
    public void stop() {
    }

    @Override
    public ConfigDef config() {
        return RandomConnectorConfig.config();
    }

    public static void main(String[] args) {
        System.out.println(RandomSourceConnector.class.getSimpleName() + " " + RandomConnectorConfig.CONNECTOR_VERSION);
    }

}
